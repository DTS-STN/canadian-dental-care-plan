import { HttpResponse, http } from 'msw';

import { getLogger } from '~/utils/logging.server';

/**
 * Server-side MSW mocks for the WSAddress API.
 */
export function getWSAddressApiMockHandlers() {
  const log = getLogger('wsaddress-api.server');
  log.info('Initializing WSAddress API mock handlers');

  return [
    //
    // Handler for GET requests to WSAddress correct service
    //
    http.get('https://api.example.com/CAN/correct', ({ request }) => {
      log.debug('Handling request for [%s]', request.url);
      return HttpResponse.json({
        '@context': {
          wsaddr: 'http://interoperability.gc.ca/address/ws-address-rest-to-soap/1.0/',
          nc: 'http://release.niem.gov/niem/niem-core/5.0/',
          can: 'http://release.niem.gov/niem/codes/canada_post/5.0/',
          stat: 'http://release.niem.gov/niem/auxiliary/statistics/5.0/',
          fault: 'http://interoperability.gc.ca/fault/2.1/',
        },
        'wsaddr:CorrectionRequest': {
          'nc:LanguageName': 'en-CA',
          'nc:AddressFullText': 'John Smith Accounting Department 123 Fake',
          'nc:AddressCityName': 'St Johns',
          'can:ProvinceCode': 'NFLD',
          'nc:AddressPostalCode': 'A1C5B9',
          'nc:CountryCode': 'CA',
          'nc:FormatResult': true,
        },
        'wsaddr:CorrectionResults': {
          'nc:LanguageName': 'en-CA',
          'nc:AddressFullText': '123 FAKE ST',
          'nc:AddressCityName': "ST. JOHN'S",
          'nc:ProvinceCode': 'NL',
          'nc:AddressPostalCode': 'A1C5B9',
          'nc:CountryCode': 'CAN',
          'wsaddr:DeliveryInformation': 'JOHN SMITH',
          'wsaddr:ExtraInformation': 'ACCOUNTING DEPARTMENT',
          'wsaddr:StatusCode': 'Corrected',
          'wsaddr:StatusMessage': '',
        },
        'wsaddr:FunctionalMessages': [
          {
            'nc:ItemActionText': 'OriginalInput',
            'nc:MessageText': 'JOHN SMITH ACCOUNTING DEPARTMENT 123 FAKE ST JOHNS NFLD A1C5B9 CA',
          },
          {
            'nc:ItemActionText': 'Optimization',
            'nc:MessageText': 'Province Changed from NFLD to NL',
          },
        ],
        'wsaddr:Messages': {
          'wsaddr:MessageErrors': [],
          'wsaddr:MessageWarnings': [
            {
              'nc:IdentificationID': '8002',
              'nc:ItemName': 'NotAllFunctionalMessagesReturned',
              'nc:MessageText': '7 functional messages were generated by this address, but only 2 were returned by StreetPerfect.',
            },
          ],
          'wsaddr:MessageInformation': [],
        },
        'wsaddr:Statistics': {
          'stat:LogStartDateTime': '2021-09-22T17:00:00.000Z',
          'stat:LogEndDateTime': '2021-09-22T17:00:00.001Z',
        },
      });
    }),

    //
    // Handler for GET requests to WSAddress parse service
    //
    http.get('https://api.example.com/CAN/parse', ({ request }) => {
      log.debug('Handling request for [%s]', request.url);
      return HttpResponse.json({
        '@context': {
          wsaddr: 'http://interoperability.gc.ca/address/ws-address-rest-to-soap/1.0/',
          nc: 'http://release.niem.gov/niem/niem-core/5.0/',
          can: 'http://release.niem.gov/niem/codes/canada_post/5.0/',
          stat: 'http://release.niem.gov/niem/auxiliary/statistics/5.0/',
          fault: 'http://interoperability.gc.ca/fault/2.1/',
        },
        'wsaddr:ParsedRequest': {
          'nc:LanguageName': 'fr-CA',
          'wsaddr:ParseFunction': 'correctAndParse',
          'wsaddr:GeoScope': 'Canada',
          'nc:AddressFullText': '123 Fausse rue, Québec, QC',
          'nc:AddressCityName': 'Québec City',
          'can:ProvinceCode': 'QC',
          'nc:AddressPostalCode': 'G1P 4P1',
          'nc:CountryCode': 'CAN',
        },
        'wsaddr:ParsedResults': {
          'nc:AddressCategoryText': 'Urban',
          'nc:AddressFullText': '123 FAUSSE RUE',
          'nc:AddressCityName': 'QUEBEC',
          'can:ProvinceCode': 'QC',
          'nc:AddressPostalCode': 'G1P4P1',
          'nc:CountryCode': 'CAN',
          'nc:StreetNumberText': '500',
          'nc:StreetExtensionText': '',
          'nc:StreetName': 'FAUSSE',
          'can:StreetDirectionalCode': 'UNKNOWN',
          'can:StreetCategoryCode': 'RUE',
          'nc:AddressSecondaryUnitText': '',
          'wsaddr:AddressSecondaryUnitNumber': '',
          'wsaddr:CityLong': '',
          'wsaddr:CityShort': '',
          'wsaddr:Service': {
            'wsaddr:ServiceRouteType': 'Unknown',
            'wsaddr:ServiceNumber': '',
            'wsaddr:ServiceAreaName': '',
            'wsaddr:ServiceAreaType': '',
            'wsaddr:ServiceAreaQualifier': '',
          },
          'wsaddr:CanadaPostInformation': {
            'wsaddr:BuildingName': 'APPARTEMENTS POLYNOME',
            'wsaddr:DepartmentName': '',
            'wsaddr:GeneralDeliveryDescription': '',
            'wsaddr:LargeVolumeReceiver': '',
            'wsaddr:UnknownCanadaPostInformation': '',
          },
          'nc:AddressDeliveryPointText': 'QUEBEC QC',
          'wsaddr:ExtraInformation': '',
          'wsaddr:Information': {
            'wsaddr:StatusCode': 'Corrected',
            'nc:MessageText': '',
          },
        },
        'wsaddr:FunctionalMessages': [
          {
            'nc:ItemActionText': 'OriginalInput',
            'nc:MessageText': '500 FAUSSE RUE, QUEBEC, QC                                      QUEBEC CITY          QC    G1P 4P1    CAN',
          },
          {
            'nc:ItemActionText': 'CorrectionError',
            'nc:MessageText': "Ponctuation (Commas Et/Ou Periods) Retiré De L'adresse",
          },
        ],
        'wsaddr:Messages': {
          'wsaddr:MessageErrors': [],
          'wsaddr:MessageWarnings': [
            {
              'nc:IdentificationID': '8002',
              'nc:ItemName': 'NotAllFunctionalMessagesReturned',
              'nc:MessageText': '[5] functional messages were generated by this address, but only [2] were returned by StreetPerfect.',
            },
          ],
          'wsaddr:MessageInformation': [],
        },
        'wsaddr:Statistics': {
          'stat:LogEndDateTime': '2021-09-23T18:43:16.402Z',
          'stat:LogStartDateTime': '2021-09-23T18:43:16.401Z',
        },
      });
    }),

    //
    // Handler for GET requests to WSAddress validate service
    //
    http.get('https://api.example.com/CAN/validate', ({ request }) => {
      log.debug('Handling request for [%s]', request.url);
      return HttpResponse.json({
        '@context': {
          wsaddr: 'http://interoperability.gc.ca/address/ws-address-rest-to-soap/1.0/',
          nc: 'http://release.niem.gov/niem/niem-core/5.0/',
          can: 'http://release.niem.gov/niem/codes/canada_post/5.0/',
          stat: 'http://release.niem.gov/niem/auxiliary/statistics/5.0/',
          fault: 'http://interoperability.gc.ca/fault/2.1/',
        },
        'wsaddr:ValidationRequest': {
          'nc:LanguageName': 'en-CA',
          'nc:AddressFullText': '123 FAKE ST',
          'nc:AddressCityName': "ST. JOHN'S",
          'can:ProvinceCode': 'NL',
          'nc:AddressPostalCode': 'A1C5B9',
          'nc:CountryCode': 'CAN',
        },
        'wsaddr:ValidationResults': {
          'wsaddr:Information': {
            'wsaddr:StatusCode': 'Valid',
            'nc:MessageText': '',
          },
        },
        'wsaddr:FunctionalMessages': [
          {
            'nc:ItemActionText': 'Information',
            'nc:MessageText': 'Sample Functional Message',
          },
        ],
        'wsaddr:Messages': {
          'wsaddr:MessageErrors': [],
          'wsaddr:MessageWarnings': [
            {
              'nc:IdentificationID': '7100',
              'nc:ItemName': 'SampleResponse',
              'nc:MessageText': 'This is a sample response',
            },
          ],
          'wsaddr:MessageInformation': [],
        },
        'wsaddr:Statistics': {
          'stat:LogStartDateTime': '2021-09-22T17:00:00.000Z',
          'stat:LogEndDateTime': '2021-09-22T17:00:00.001Z',
        },
      });
    }),

    //
    // Handler for GET requests to WSAddress format service
    //
    http.get('https://api.example.com/CAN/format', ({ request }) => {
      log.debug('Handling request for [%s]', request.url);
      return HttpResponse.json({
        '@context': {
          wsaddr: 'http://interoperability.gc.ca/address/ws-address-rest-to-soap/1.0/',
          nc: 'http://release.niem.gov/niem/niem-core/5.0/',
          can: 'http://release.niem.gov/niem/codes/canada_post/5.0/',
          stat: 'http://release.niem.gov/niem/auxiliary/statistics/5.0/',
          fault: 'http://interoperability.gc.ca/fault/2.1/',
        },
        'wsaddr:FormattingRequest': {
          'nc:LanguageName': 'en-CA',
          'nc:AddressFullText': '123 Fake',
          'nc:AddressCityName': 'St Johns',
          'can:ProvinceCode': 'NL',
          'nc:AddressPostalCode': 'A1C5B9',
          'nc:CountryCode': 'CAN',
        },
        'wsaddr:FormattingResults': {
          'wsaddr:FormattedAddressLines': ['123 FAKE', 'ST JOHNS NL  A1C 5B9'],
          'wsaddr:Information': {
            'wsaddr:StatusCode': 'Normal',
            'nc:MessageText': '',
          },
        },
        'wsaddr:Messages': {
          'wsaddr:MessageErrors': [],
          'wsaddr:MessageWarnings': [
            {
              'nc:IdentificationID': '7100',
              'nc:ItemName': 'SampleResponse',
              'nc:MessageText': 'This is a sample response',
            },
          ],
          'wsaddr:MessageInformation': [],
        },
        'wsaddr:Statistics': {
          'stat:LogStartDateTime': '2021-09-22T17:00:00.000Z',
          'stat:LogEndDateTime': '2021-09-22T17:00:00.001Z',
        },
      });
    }),
  ];
}
